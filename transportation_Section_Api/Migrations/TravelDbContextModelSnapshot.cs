// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using transportation_Section_Api.Model;

#nullable disable

namespace transportation_Section_Api.Migrations
{
    [DbContext(typeof(TravelDbContext))]
    partial class TravelDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("transportation_Section_Api.Model.Package", b =>
                {
                    b.Property<int>("PackageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PackageId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PackageId");

                    b.ToTable("Packages");

                    b.HasData(
                        new
                        {
                            PackageId = 1,
                            Name = "Weekend Getaway"
                        },
                        new
                        {
                            PackageId = 2,
                            Name = "Adventure Trip"
                        });
                });

            modelBuilder.Entity("transportation_Section_Api.Model.PackageTransportation", b =>
                {
                    b.Property<int>("PackageTransportationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PackageTransportationId"));

                    b.Property<int>("PackageId")
                        .HasColumnType("int");

                    b.Property<int>("TransportationId")
                        .HasColumnType("int");

                    b.HasKey("PackageTransportationId");

                    b.HasIndex("PackageId");

                    b.HasIndex("TransportationId");

                    b.ToTable("PackageTransportations");

                    b.HasData(
                        new
                        {
                            PackageTransportationId = 1,
                            PackageId = 1,
                            TransportationId = 1
                        },
                        new
                        {
                            PackageTransportationId = 2,
                            PackageId = 2,
                            TransportationId = 2
                        });
                });

            modelBuilder.Entity("transportation_Section_Api.Model.Provider", b =>
                {
                    b.Property<int>("ProviderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProviderId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ProviderId");

                    b.ToTable("Providers");

                    b.HasData(
                        new
                        {
                            ProviderId = 1,
                            Address = "123 Main St, Dhaka",
                            CompanyName = "Company A",
                            ContactNumber = "123-456-7890",
                            IsVerified = false,
                            Name = "Hanif"
                        },
                        new
                        {
                            ProviderId = 2,
                            Address = "456 Elm St, Rangamati",
                            CompanyName = "Company B",
                            ContactNumber = "123-456-755",
                            IsVerified = false,
                            Name = "Nabil"
                        });
                });

            modelBuilder.Entity("transportation_Section_Api.Model.Transportation", b =>
                {
                    b.Property<int>("TransportationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransportationId"));

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartureLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("TransportationTypeId")
                        .HasColumnType("int");

                    b.HasKey("TransportationId");

                    b.HasIndex("ProviderId");

                    b.HasIndex("TransportationTypeId");

                    b.ToTable("Transportations");

                    b.HasData(
                        new
                        {
                            TransportationId = 1,
                            ArrivalTime = new DateTime(2024, 9, 23, 17, 31, 7, 499, DateTimeKind.Local).AddTicks(776),
                            DepartureDate = new DateTime(2024, 9, 23, 15, 31, 7, 499, DateTimeKind.Local).AddTicks(757),
                            DepartureLocation = "Dhaka",
                            Description = "Bus from Dhaka to RangaMati",
                            IsActive = true,
                            ProviderId = 1,
                            Rating = 5,
                            TransportationTypeId = 1
                        },
                        new
                        {
                            TransportationId = 2,
                            ArrivalTime = new DateTime(2024, 9, 24, 18, 31, 7, 499, DateTimeKind.Local).AddTicks(781),
                            DepartureDate = new DateTime(2024, 9, 24, 15, 31, 7, 499, DateTimeKind.Local).AddTicks(780),
                            DepartureLocation = "Laxmipur",
                            Description = "Train from Laxmipur to Rangpur",
                            IsActive = true,
                            ProviderId = 2,
                            Rating = 4,
                            TransportationTypeId = 2
                        });
                });

            modelBuilder.Entity("transportation_Section_Api.Model.TransportationType", b =>
                {
                    b.Property<int>("TransportationTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransportationTypeId"));

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TransportationTypeId");

                    b.ToTable("TransportationTypes");

                    b.HasData(
                        new
                        {
                            TransportationTypeId = 1,
                            TypeName = "Bus"
                        },
                        new
                        {
                            TransportationTypeId = 2,
                            TypeName = "Train"
                        },
                        new
                        {
                            TransportationTypeId = 3,
                            TypeName = "Airplane"
                        });
                });

            modelBuilder.Entity("transportation_Section_Api.Model.PackageTransportation", b =>
                {
                    b.HasOne("transportation_Section_Api.Model.Package", "Package")
                        .WithMany("PackageTransportations")
                        .HasForeignKey("PackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("transportation_Section_Api.Model.Transportation", "Transportation")
                        .WithMany("PackageTransportations")
                        .HasForeignKey("TransportationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Package");

                    b.Navigation("Transportation");
                });

            modelBuilder.Entity("transportation_Section_Api.Model.Transportation", b =>
                {
                    b.HasOne("transportation_Section_Api.Model.Provider", "Provider")
                        .WithMany("Transportations")
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("transportation_Section_Api.Model.TransportationType", "TransportationType")
                        .WithMany("Transportations")
                        .HasForeignKey("TransportationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provider");

                    b.Navigation("TransportationType");
                });

            modelBuilder.Entity("transportation_Section_Api.Model.Package", b =>
                {
                    b.Navigation("PackageTransportations");
                });

            modelBuilder.Entity("transportation_Section_Api.Model.Provider", b =>
                {
                    b.Navigation("Transportations");
                });

            modelBuilder.Entity("transportation_Section_Api.Model.Transportation", b =>
                {
                    b.Navigation("PackageTransportations");
                });

            modelBuilder.Entity("transportation_Section_Api.Model.TransportationType", b =>
                {
                    b.Navigation("Transportations");
                });
#pragma warning restore 612, 618
        }
    }
}
